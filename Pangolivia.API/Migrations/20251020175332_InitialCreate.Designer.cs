// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pangolivia.API.Data;

#nullable disable

namespace Pangolivia.API.Migrations
{
    [DbContext(typeof(PangoliviaDbContext))]
    [Migration("20251020175332_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pangolivia.API.Models.GameRecordModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HostUserId")
                        .HasColumnType("int")
                        .HasColumnName("host_user_id");

                    b.Property<int>("QuizId")
                        .HasColumnType("int")
                        .HasColumnName("quiz_id");

                    b.Property<DateTime>("datetimeCompleted")
                        .HasColumnType("datetime2")
                        .HasColumnName("datetime_completed");

                    b.HasKey("Id");

                    b.HasIndex("HostUserId");

                    b.HasIndex("QuizId");

                    b.ToTable("game_records");
                });

            modelBuilder.Entity("Pangolivia.API.Models.PlayerGameRecordModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GameRecordId")
                        .HasColumnType("int")
                        .HasColumnName("game_record_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<double>("score")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("GameRecordId");

                    b.HasIndex("UserId");

                    b.ToTable("player_game_records");
                });

            modelBuilder.Entity("Pangolivia.API.Models.QuestionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Answer3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Answer4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuizId")
                        .HasColumnType("int")
                        .HasColumnName("quiz_id");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("questions");
                });

            modelBuilder.Entity("Pangolivia.API.Models.QuizModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int")
                        .HasColumnName("created_by_user_id");

                    b.Property<string>("QuizName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("quiz_name");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("quizzes");
                });

            modelBuilder.Entity("Pangolivia.API.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthUuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("auth_uuid");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Pangolivia.API.Models.GameRecordModel", b =>
                {
                    b.HasOne("Pangolivia.API.Models.UserModel", "HostUser")
                        .WithMany("HostedGameRecords")
                        .HasForeignKey("HostUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pangolivia.API.Models.QuizModel", "Quiz")
                        .WithMany("GameRecords")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HostUser");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("Pangolivia.API.Models.PlayerGameRecordModel", b =>
                {
                    b.HasOne("Pangolivia.API.Models.GameRecordModel", "GameRecord")
                        .WithMany("PlayerGameRecords")
                        .HasForeignKey("GameRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pangolivia.API.Models.UserModel", "User")
                        .WithMany("PlayerGameRecords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameRecord");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pangolivia.API.Models.QuestionModel", b =>
                {
                    b.HasOne("Pangolivia.API.Models.QuizModel", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("Pangolivia.API.Models.QuizModel", b =>
                {
                    b.HasOne("Pangolivia.API.Models.UserModel", "CreatedByUser")
                        .WithMany("CreatedQuizzes")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("Pangolivia.API.Models.GameRecordModel", b =>
                {
                    b.Navigation("PlayerGameRecords");
                });

            modelBuilder.Entity("Pangolivia.API.Models.QuizModel", b =>
                {
                    b.Navigation("GameRecords");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Pangolivia.API.Models.UserModel", b =>
                {
                    b.Navigation("CreatedQuizzes");

                    b.Navigation("HostedGameRecords");

                    b.Navigation("PlayerGameRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
